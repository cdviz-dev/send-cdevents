[tools]
dprint = "latest"
action-validator = "latest"
github-cli = "latest"

[tasks.format]
alias = "fmt"
description = "Format code using dprint"
run = "dprint fmt"

[tasks."lint:config"]
description = "Check code formatting of toml, json, yaml, ..."
run = "dprint check"

[tasks."lint:action_yaml"]
description = "Validating action.yml"
run = "action-validator action.yml"

[tasks.lint]
description = "Run all lint"
depends = ["lint:*"]

[tasks.ci]
description = "Run all CI checks locally"
depends = ["lint"]

[tasks.release]
description = "Create a new release with version tag (usage: mise run release v1.2.3)"
run = '''
  VERSION="{{arg(name="version")}}"

  if [ -z "$VERSION" ]; then
    echo 'Error: Please provide version (e.g., mise run release v1.2.3)'
    exit 1
  fi

  MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)

  echo "=== Creating GitHub Action release ==="
  echo "Version: $VERSION (major: $MAJOR_VERSION)"

  # Ensure we're on main branch and up to date
  git checkout main
  git pull origin main

  # Create and push version tag
  echo "Creating tag: $VERSION"
  git tag -a "$VERSION" -m "Release $VERSION"
  git push origin "$VERSION"

  # Create GitHub release using gh CLI
  echo "Creating GitHub release"
  gh release create "$VERSION" \
    --generate-notes

  # Update major version tag (e.g., v1)
  echo "Updating major version tag: $MAJOR_VERSION"
  git tag -f -a "$MAJOR_VERSION" -m "Release $MAJOR_VERSION (latest: $VERSION)"
  git push origin "$MAJOR_VERSION" --force

  echo "=== Release completed! ==="
  echo "âœ… Created version tag: $VERSION"
  echo "âœ… Created GitHub release: $VERSION"
  echo "âœ… Updated major tag: $MAJOR_VERSION"
  echo "ðŸ“¦ GitHub Marketplace will auto-update from the major version tag"
'''

[tasks.release-check]
description = "Check current release status and tags"
depends = ["check"]
run = '''
  echo "=== Current Release Status ==="
  echo "Latest tags:"
  git tag --sort=-version:refname | head -5

  echo "Current branch:"
  git branch --show-current

  echo "Uncommitted changes:"
  git status --porcelain || echo "Working tree clean"
'''

[tools]
dprint = "latest"
bun = "latest"
github-cli = "latest"

[tasks.format]
description = "Format code using dprint"
run = "dprint fmt"

[tasks.check]
description = "Check code formatting and run all validations (like CI)"
run = [
  "echo '=== Checking code formatting with dprint ==='",
  "dprint check",
  "echo '=== Validating action.yml ==='",
  "bunx @action-validator/core action.yml",
  "echo '=== All checks completed ==='",
]

[tasks.ci]
description = "Run all CI checks locally"
alias = "check"

[tasks.release]
description = "Create a new release with version tag (usage: mise run release -- v1.2.3)"
depends = ["check"]
run = '''
  if [ -z "$1" ]; then 
    echo 'Error: Please provide version (e.g., mise run release -- v1.2.3)'
    exit 1
  fi
  
  VERSION="$1"
  MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
  
  echo "=== Creating GitHub Action release ==="
  echo "Version: $VERSION (major: $MAJOR_VERSION)"
  
  # Ensure we're on main branch and up to date
  git checkout main
  git pull origin main
  
  # Create and push version tag
  echo "Creating tag: $VERSION"
  git tag -a "$VERSION" -m "Release $VERSION"
  git push origin "$VERSION"
  
  # Create GitHub release using gh CLI
  echo "Creating GitHub release"
  gh release create "$VERSION" \
    --title "Release $VERSION" \
    --notes "## Changes

See [CHANGELOG.md](https://github.com/cdviz-dev/send-cdevents/blob/main/CHANGELOG.md) for details.

## Usage

\`\`\`yaml
- name: Send CDEvent
  uses: cdviz-dev/send-cdevents@$VERSION
  with:
    data: |
      {
        \"context\": {
          \"version\": \"0.4.1\",
          \"source\": \"github-actions\",
          \"type\": \"dev.cdevents.taskrun.started.0.2.0\"
        },
        \"subject\": {
          \"id\": \"\${{ github.run_id }}\",
          \"type\": \"taskRun\",
          \"content\": {
            \"taskName\": \"ci-build\"
          }
        }
      }
    url: \"https://your-webhook-endpoint.com/cdevents\"
\`\`\`"
  
  # Update major version tag (e.g., v1)  
  echo "Updating major version tag: $MAJOR_VERSION"
  git tag -f -a "$MAJOR_VERSION" -m "Release $MAJOR_VERSION (latest: $VERSION)"
  git push origin "$MAJOR_VERSION" --force
  
  echo "=== Release completed! ==="
  echo "âœ… Created version tag: $VERSION"
  echo "âœ… Created GitHub release: $VERSION"
  echo "âœ… Updated major tag: $MAJOR_VERSION" 
  echo "ðŸ“¦ GitHub Marketplace will auto-update from the major version tag"
'''

[tasks.release-check]
description = "Check current release status and tags"
depends = ["check"]
run = '''
  echo "=== Current Release Status ==="
  echo "Latest tags:"
  git tag --sort=-version:refname | head -5
  
  echo "Current branch:"
  git branch --show-current
  
  echo "Uncommitted changes:"
  git status --porcelain || echo "Working tree clean"
'''